import { NextResponse } from "next/server"; import { supabaseAdmin } from "@/lib/supabaseAdmin"; export async function GET(req:Request){ const {searchParams}=new URL(req.url); const key=searchParams.get("key"); const dep=(searchParams.get("dep")||"").toLowerCase(); if(key!==process.env.PRODUCTION_SECRET) return NextResponse.json({error:"Yetkisiz"},{status:401}); const {data,error}=await supabaseAdmin.from("order_items").select("*, products:product_id(name), orders:order_id(company_name,delivery_date)").order("id",{ascending:true}); if(error) return NextResponse.json({error:error.message},{status:500}); const filtered=(data||[]).filter((row:any)=>{ const name=(row.products?.name||"" ).toLowerCase(); if(dep==="terzi") return true; if(dep==="baza") return name.includes("baza"); if(dep==="baslik"||dep==="başlık") return name.includes("başlık")||name.includes("baslik"); if(dep==="yatak") return name.includes("yatak"); return true; }); return NextResponse.json({items:filtered}); } export async function PATCH(req:Request){ const {searchParams}=new URL(req.url); const key=searchParams.get("key"); if(key!==process.env.PRODUCTION_SECRET) return NextResponse.json({error:"Yetkisiz"},{status:401}); const body=await req.json(); const {id,produced,packaged,shipped}=body; const {error}=await supabaseAdmin.from("order_items").update({produced,packaged,shipped}).eq("id",id); if(error) return NextResponse.json({error:error.message},{status:500}); return NextResponse.json({ok:true}); }