"use client";
import { useEffect, useMemo, useState } from "react"; export default function Production({params}:any){ const dep=params.dep; const [key,setKey]=useState(""); const [items,setItems]=useState<any[]>([]); const load=async()=>{ const r=await fetch(`/api/production/items?key=${encodeURIComponent(key)}&dep=${encodeURIComponent(dep)}`); const j=await r.json(); if(!r.ok){ alert(j.error||"Hata"); return;} setItems(j.items||[]); }; const toggle=async(id:number,field:"produced"|"packaged"|"shipped",val:boolean)=>{ const r=await fetch(`/api/production/items?key=${encodeURIComponent(key)}`,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify({id,[field]:val})}); if(!r.ok){ const j=await r.json(); alert(j.error||"Hata"); return;} setItems(items=>items.map(it=>it.id===id?{...it,[field]:val}:it)); }; useEffect(()=>{ if(key) load(); },[key,dep]); const grouped=useMemo(()=>{ const by:Record<string,any[]>= {}; for(const it of items){ const c=it.orders?.company_name||"Firma?"; (by[c] ||= []).push(it);} return by; },[items]); return (<div><h1>Üretim: {dep.toUpperCase()}</h1><p>Key: <input value={key} onChange={e=>setKey(e.target.value)} placeholder="PRODUCTION_SECRET"/></p><button onClick={load}>Yenile</button>{Object.entries(grouped).map(([company,arr]:any)=>(<div key={company} style={{border:"1px solid #ddd",padding:10,marginTop:10}}><div style={{display:"flex",justifyContent:"space-between"}}><b>{company}</b><span>Sevk Tarihi: {arr[0]?.orders?.delivery_date||"-"}</span></div><table width="100%" cellPadding="6"><thead><tr><th>Ürün</th><th>Renk</th><th>Adet</th><th>Not</th><th>Üretildi</th><th>Paket</th><th>Sevk</th></tr></thead><tbody>{arr.map((it:any)=>(<tr key={it.id}><td>{it.products?.name}</td><td>{it.color||"-"}</td><td>{it.quantity}</td><td>{it.note||"-"}</td><td><input type="checkbox" checked={!!it.produced} onChange={e=>toggle(it.id,"produced",e.target.checked)}/></td><td><input type="checkbox" checked={!!it.packaged} onChange={e=>toggle(it.id,"packaged",e.target.checked)}/></td><td><input type="checkbox" checked={!!it.shipped} onChange={e=>toggle(it.id,"shipped",e.target.checked)}/></td></tr>))}</tbody></table><div style={{marginTop:8}}>Bugün üretildi: {arr.filter((x:any)=>x.produced).length} | Kalan: {arr.filter((x:any)=>!x.produced).length}</div></div>))}</div>); }
