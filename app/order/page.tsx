"use client";
import { useEffect, useState } from "react"; type Product={id:number;name:string;price:number}; export default function OrderForm(){ const [products,setProducts]=useState<Product[]>([]); const [company_name,setCompanyName]=useState(""); const [taken_by,setTakenBy]=useState(""); const [end_customer_name,setEndCustomer]=useState(""); const [contact_email,setEmail]=useState(""); const [imageFile,setImageFile]=useState<File|null>(null); const [imageUrl,setImageUrl]=useState<string|undefined>(undefined); const [items,setItems]=useState<any[]>([{product_id:null,quantity:1,color:"",note:""}]); const [subTotal,setSubTotal]=useState(0); const [totalIncl,setTotalIncl]=useState(0); useEffect(()=>{ fetch("/api/public/products").then(r=>r.json()).then(j=>setProducts(j.products||[])); },[]); useEffect(()=>{ let total=0; for(const it of items){ const p=products.find(p=>p.id===Number(it.product_id)); const unit=p?.price||0; total+=unit*(Number(it.quantity)||0);} setSubTotal(Number(total.toFixed(2))); setTotalIncl(Number((total*1.10).toFixed(2))); },[items,products]); const addItem=()=>setItems([...items,{product_id:null,quantity:1,color:"",note:""}]); const rmItem=(i:number)=>setItems(items.filter((_,idx)=>idx!==i)); const onUpload=async()=>{ if(!imageFile) return; const fd=new FormData(); fd.append("file",imageFile); const r=await fetch("/api/public/upload",{method:"POST",body:fd}); const j=await r.json(); if(!r.ok){ alert(j.error||"Yükleme hatası"); return;} setImageUrl(j.url); alert("Görsel yüklendi"); }; const submit=async()=>{ const payload={company_name,taken_by,end_customer_name,contact_email,image_url:imageUrl,items:items.map(it=>({product_id:Number(it.product_id),quantity:Number(it.quantity),color:it.color||null,note:it.note||null}))}; const r=await fetch("/api/public/orders",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(payload)}); const j=await r.json(); if(!r.ok){ alert(j.error||"Hata"); return;} alert("Sipariş alındı! Numara: "+j.order_id); setCompanyName(""); setTakenBy(""); setEndCustomer(""); setEmail(""); setImageFile(null); setImageUrl(undefined); setItems([{product_id:null,quantity:1,color:"",note:""}]); }; return (<div><h1>Müşteri Sipariş Formu</h1><div style={{display:"grid",gap:8,maxWidth:800}}><label>Firma Adı <input value={company_name} onChange={e=>setCompanyName(e.target.value)}/></label><label>Siparişi Kim Çekti <input value={taken_by} onChange={e=>setTakenBy(e.target.value)}/></label><label>Görsel (varsa) <input type="file" onChange={e=>setImageFile(e.target.files?.[0]||null)}/> <button onClick={onUpload} disabled={!imageFile}>Yükle</button> {imageUrl&&<span>Yüklendi</span>}</label><label>Mail Adresi <input type="email" value={contact_email} onChange={e=>setEmail(e.target.value)}/></label><label>Kendi Müşterisinin Adı <input value={end_customer_name} onChange={e=>setEndCustomer(e.target.value)}/></label></div><h2>Ürünler</h2>{items.map((it,i)=>(<div key={i} style={{display:"grid",gridTemplateColumns:"2fr 1fr 1fr 2fr auto",gap:8,alignItems:"center",maxWidth:900,borderBottom:"1px solid #eee",padding:"8px 0"}}><select value={it.product_id||""} onChange={e=>{ const v=e.target.value?Number(e.target.value):null; const arr=[...items]; arr[i].product_id=v; setItems(arr); }}><option value="">Ürün seçin…</option>{products.map(p=>(<option key={p.id} value={p.id}>{p.name}</option>))}</select><input type="text" placeholder="Renk" value={it.color} onChange={e=>{ const arr=[...items]; arr[i].color=e.target.value; setItems(arr); }}/><input type="number" min={1} max={50} value={it.quantity} onChange={e=>{ const arr=[...items]; arr[i].quantity=e.target.value; setItems(arr); }}/><input type="text" placeholder="Açıklama" value={it.note} onChange={e=>{ const arr=[...items]; arr[i].note=e.target.value; setItems(arr); }}/><div>₺{(products.find(p=>p.id===Number(it.product_id))?.price||0).toFixed(2)}</div><button onClick={()=>rmItem(i)} disabled={items.length===1}>Sil</button></div>))}<button onClick={addItem}>+ Ürün Ekle</button><h3>Toplam</h3><div>Ara Toplam (KDV hariç): ₺{subTotal.toFixed(2)}</div><div>KDV Dahil (×1,10): <b>₺{totalIncl.toFixed(2)}</b></div><p><button onClick={submit}>Gönder</button></p></div>); }
